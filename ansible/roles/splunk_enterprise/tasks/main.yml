---
# Main playbook for this role

- name: start role tasks
  tags:
    - splunk
    - splunk_enterprise
  debug: msg="role '{{ role_name }}' start"

- name: "check for systemctl"
  tags:
    - splunk
    - splunk_enterprise
  stat:
    path: /bin/systemctl
  register: systemctl

- name: set splunk service name
  tags:
    - splunk
    - splunk_enterprise
  set_fact:
    use_systemctl: false
    splunk_service_name: splunk
  when: systemctl.stat.exists == false

- name: "check for splunk fresh install"
  tags:
    - splunk
    - splunk_enterprise
  stat: path={{ splunk_home }}
  register: splunk_stat

- name: "create splunk user and group"
  tags:
    - splunk
    - splunk_enterprise
  include_tasks: users.yml

- name: checking if splunk is installed
  tags:
    - splunk
    - splunk_enterprise
  stat:
    path: "{{ splunk_home }}/bin"
  register: splunk_path

- name: splunk is installed here
  tags:
    - splunk
    - splunk_enterprise
  debug: msg='splunk is already installed under {{ splunk_home }}/bin/splunk'
  when: splunk_path.stat.exists

- name: check for existing splunk.secret file
  tags:
    - splunk
    - splunk_enterprise
    - splunk_secret
  stat:
    path: "{{ splunk_auth_dir }}/{{ splunk_install_app }}_splunk.secret"
  become: no
  register: splunk_secret_file
  delegate_to: localhost
  when: splunk_secret_share[splunk_install_app] == true

- name: "install the splunk software"
  tags:
    - splunk
    - splunk_enterprise
  include_tasks: install.yml
  when: splunk_path.stat.exists == false

- name: "set ulimits and disable THP"
  tags:
    - splunk
    - splunk_enterprise
  include_tasks: ulimit_thp.yml
  when: splunk_install_app == 'splunk'

- name: "user interface configuration"
  tags:
    - splunk
    - splunk_enterprise
  include_tasks: ui_config.yml

- name: final splunk restart after base install
  tags:
    - splunk
    - splunk_enterprise
  service:
    name: "{{ splunk_service_name }}"
    state: restarted
  become: yes
  become_user: root
  when: not splunk_stat.stat.exists

- name: save shared splunk.secret file
  tags:
    - splunk
    - splunk_enterprise
    - splunk_secret
  synchronize:
    src: "{{ splunk_home }}/etc/auth/splunk.secret"
    dest: "{{ splunk_auth_dir }}/{{ splunk_install_app }}_splunk.secret"
    rsync_path: "{{ become_method|default('sudo') }} -u {{splunk_user}} rsync"
    mode: pull
  become: no
  when: splunk_secret_share[splunk_install_app] == true and splunk_secret_file.stat.exists == false

- name: link splunkforwarder to splunk secret file
  tags:
    - splunk
    - splunk_enterprise
    - splunk_secret
  file:
    state: link
    src: "splunk_splunk.secret"
    dest: "{{ splunk_auth_dir }}/splunkforwarder_splunk.secret"
  become: no
  delegate_to: localhost
  when:
    - splunk_secret_share.splunk == true
    - splunk_secret_share.splunkforwarder == true
    - splunk_secret_share.equal == true
    - splunk_secret_file.stat.exists == false
