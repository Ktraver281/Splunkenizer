---
# Main playbook for this role

- name: start role tasks
  tags:
    - splunk
    - universal_forwarder
  debug: msg="role '{{ role_name }}' start"

- name: call splunk enterprise for UF
  tags:
    - splunk
    - universal_forwarder
  include_role:
    name: splunk_enterprise
  vars:
    splunk_install_app: splunkforwarder

- name: apply baseconfig app org_all_deploymentclient
  tags:
    - splunk
    - splunk_baseconfig
    - universal_forwarder
    - org_all_deploymentclient
  include_role:
    name: baseconfig_app
  vars:
    app_name: 'org_all_deploymentclient'
    app_path: '{{splunk_home}}/etc/apps'
  notify: restart splunk
  when: groups.role_deployment_server is defined

- name: check if deployment server is configured
  tags:
    - splunk
    - splunk_baseconfig
    - universal_forwarder
  shell: "{{ splunk_home }}/bin/splunk show deploy-poll -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: splunk
  register: need_splunkforwarder_restart
  check_mode: False
  changed_when: need_splunkforwarder_restart.stdout.find('is not set') != -1

- name: restart splunk for deployment server configuration
  tags:
    - splunk
    - splunk_baseconfig
    - universal_forwarder
  service: name=splunk state=restarted
  become: yes
  become_user: root
  when: need_splunkforwarder_restart.stdout.find('is not set') != -1 and groups.role_deployment_server is defined

- name: apply baseconfig app org_all_forwarder_outputs
  tags:
    - splunk
    - splunk_baseconfig
    - universal_forwarder
    - org_all_forwarder_outputs
  include_role:
    name: baseconfig_app
  vars:
    app_name: 'org_all_forwarder_outputs'
    app_path: '{{splunk_home}}/etc/apps'
  when: groups.role_deployment_server is not defined

- name: update serverclass on deployment_server
  include_role:
    name: deployment_server
    tasks_from: update_serverclass
